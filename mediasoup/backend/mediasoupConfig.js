import * as mediasoup from "mediasoup";

/**
 * You can look at this docs to learn more,
 * DOCS: https://mediasoup.org/documentation/v3/mediasoup/api/#Worker-dictionaries
 *
 * logLevel: Logging level for logs generated by the media worker subprocesses (check the Debugging documentation). Valid values are “debug”, “warn”, “error” and “none”.
 */
const workerSettings = {
  logLevel: "warn",
  rtcMinPort: 10000, // Minimun RTC port for ICE, DTLS, RTP, etc.
  rtcMaxPort: 10100, // Maximum RTC port for ICE, DTLS, RTP, etc.
};

/**
 * kind: Media kind (“audio” or “video”).
 * mimeType: The codec MIME media type/subtype (e.g. “audio/opus”, “video/VP8”).
 * clockRate: Codec clock rate expressed in Hertz.
 * channels: The number of channels supported (e.g. two for stereo). Just for audio.
 *
 * DOCS: https://mediasoup.org/documentation/v3/mediasoup/api/#RouterOptions
 */
const routerOptions = {
  mediaCodecs: [
    {
      kind: "audio",
      mimeType: "audio/opus",
      clockRate: 48000,
      channels: 2,
    },
    {
      kind: "video",
      mimeType: "video/VP8",
      clockRate: 90000,
    }
  ],
};

let worker;
let router;

const createWorker = async () => {
  worker = await mediasoup.createWorker(workerSettings);

  worker.on("died", () => {
    console.error("MediaSoup worker has died");
  });

  router = await worker.createRouter({ mediaCodecs: routerOptions });
};

export { worker, router, createWorker };
